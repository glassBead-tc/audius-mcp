# #!/bin/sh

# # Advanced Pre-Commit Secret Detection Hook

# echo "Running pre-commit secret detection..."

# # Comprehensive secret detection patterns
# SECRET_KEYWORDS='(api_?key|secret|password|credential|token|access_?token|client_?secret)'
# SENSITIVE_VALUE_PATTERNS='(sk_|pk_|Bearer\s+[A-Za-z0-9\-\._~\+\/]+'

# # Completely ignore build and generated directories
# git diff --cached --name-only | grep -qE '^build/' && exit 0

# # Collect source files to check
# FILES_TO_CHECK=$(git diff --cached --name-only | grep -vE '^(build/|dist/|node_modules/|\.git/)')

# # Flag to track if any secrets are found
# SECRETS_FOUND=0

# for file in $FILES_TO_CHECK; do
#     if [ -f "$file" ]; then
#         # Detect potential secrets in added lines, strictly excluding comments and SDK initialization
#         POTENTIAL_SECRETS=$(git diff --cached -U0 "$file" | 
#             grep '^+' |                      # Only added lines 
#             grep -vE '^\s*//.*Initialize.*SDK' | # Exclude SDK initialization comments
#             grep -vE '^\s*//|^\s*#' |        # Exclude other comment lines
#             grep -iE "$SECRET_KEYWORDS|$SENSITIVE_VALUE_PATTERNS")

#         if [ -n "$POTENTIAL_SECRETS" ]; then
#             echo "❌ Potential secrets detected in $file:"
#             echo "$POTENTIAL_SECRETS"
#             SECRETS_FOUND=1
#         fi
#     fi
# done

# # Additional .env file check
# ENV_FILES=$(git diff --cached --name-only | grep -E '\.env')
# if [ -n "$ENV_FILES" ]; then
#     echo "❌ Warning: .env files should not be committed:"
#     echo "$ENV_FILES"
#     SECRETS_FOUND=1
# fi

# # Exit with appropriate status
# if [ $SECRETS_FOUND -ne 0 ]; then
#     echo "Error: Potential sensitive information detected. Please remove secrets before committing."
#     exit 1
# fi

# echo "✅ No sensitive information detected"
# exit 0
